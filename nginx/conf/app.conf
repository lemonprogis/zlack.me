upstream app {
    server app:8080;
}

upstream peerjs {
    server peerjs:9000;
}


server {
    listen 80;
    listen [::]:80;

    server_name zlack.me;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location ~ (\.php|.aspx|.asp|myadmin) {
        return 404;
    }

    location / {
        add_header Content-Type text/plain;
        # return 200 'healthy';
        return 301 https://zlack.me$request_uri;
    }
}

server {
  listen 443 default_server ssl http2;
  listen [::]:443 ssl http2;

  server_name zlack.me;

  ssl_certificate /etc/nginx/ssl/live/zlack.me/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/live/zlack.me/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
            proxy_pass http://app;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
            client_max_body_size 100M;
        }

    location /peerjs {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;

        proxy_pass http://peerjs;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /socket.io/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy false;
      
      proxy_pass http://app;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
}